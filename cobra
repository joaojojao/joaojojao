<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>cobra grossa do jojao</title>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
        }

        canvas {
            border: 5px solid #fff;
            background-color: rgba(0, 0, 0, 0.8);
            display: none;
        }

        .controls {
            margin-top: 10px;
            display: grid;
            grid-template-columns: repeat(3, 60px);
            gap: 5px;
            display: none;
        }

        .controls button {
            width: 60px;
            height: 60px;
            font-size: 18px;
            font-weight: bold;
            color: #fff;
            background-color: #ff4500;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .controls button:active {
            background-color: #ffa500;
        }

        .empty {
            visibility: hidden;
        }

        .lobby {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            width: 100%;
            background: pink;
            border: 10px solid;
            border-image: linear-gradient(45deg, yellow, orange, pink, purple) 1;
        }

        .lobby button {
            padding: 15px 30px;
            font-size: 22px;
            font-weight: bold;
            color: #fff;
            background: linear-gradient(45deg, #ff00ff, #ff4500);
            border: none;
            border-radius: 30px;
            cursor: pointer;
            margin-top: 20px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .lobby button:hover {
            transform: scale(1.1);
            box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3);
        }

        .lobby h1 {
            color: #fff;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
        }
    </style>
</head>
<body>
    <div class="lobby">
        <h1>Aperte para iniciar</h1>
        <button id="startGame">start</button>
    </div>

    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <div class="controls">
        <button class="empty"></button>
        <button id="up">⬆️</button>
        <button class="empty"></button>
        <button id="left">⬅️</button>
        <button id="down">⬇️</button>
        <button id="right">➡️</button>
    </div>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        const lobby = document.querySelector('.lobby');
        const controls = document.querySelector('.controls');
        const startButton = document.getElementById('startGame');

        // Configuração inicial
        const boxSize = 20;
        let snake = [{ x: 200, y: 200 }];
        let direction = 'RIGHT';
        let food = { x: randomPosition(), y: randomPosition() };
        let score = 0;
        let gameInterval;

        function randomPosition() {
            return Math.floor(Math.random() * (canvas.width / boxSize)) * boxSize;
        }

        function drawSnake() {
            snake.forEach((segment, index) => {
                ctx.fillStyle = index === 0 ? '#ff00ff' : '#ffa500';
                ctx.fillRect(segment.x, segment.y, boxSize, boxSize);
                ctx.strokeStyle = '#000';
                ctx.strokeRect(segment.x, segment.y, boxSize, boxSize);
            });
        }

        function drawFood() {
            ctx.fillStyle = '#ff4500';
            ctx.fillRect(food.x, food.y, boxSize, boxSize);
        }

        function updateSnake() {
            const head = { ...snake[0] };

            if (direction === 'UP') head.y -= boxSize;
            if (direction === 'DOWN') head.y += boxSize;
            if (direction === 'LEFT') head.x -= boxSize;
            if (direction === 'RIGHT') head.x += boxSize;

            snake.unshift(head);

            // Verifica se a cobra comeu a comida
            if (head.x === food.x && head.y === food.y) {
                food = { x: randomPosition(), y: randomPosition() };
                score++;
            } else {
                snake.pop();
            }
        }

        function checkCollision() {
            const head = snake[0];

            // Verifica colisão com as bordas
            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height) {
                return true;
            }

            // Verifica colisão com o próprio corpo
            for (let i = 1; i < snake.length; i++) {
                if (head.x === snake[i].x && head.y === snake[i].y) {
                    return true;
                }
            }

            return false;
        }

        function gameLoop() {
            if (checkCollision()) {
                clearInterval(gameInterval);
                alert(`Game Over! Sua pontuação: ${score}`);
                document.location.reload();
                return;
            }

            ctx.clearRect(0, 0, canvas.width, canvas.height);

            drawFood();
            updateSnake();
            drawSnake();
        }

        document.addEventListener('keydown', (event) => {
            if (event.key === 'ArrowUp' && direction !== 'DOWN') direction = 'UP';
            if (event.key === 'ArrowDown' && direction !== 'UP') direction = 'DOWN';
            if (event.key === 'ArrowLeft' && direction !== 'RIGHT') direction = 'LEFT';
            if (event.key === 'ArrowRight' && direction !== 'LEFT') direction = 'RIGHT';
        });

        document.getElementById('up').addEventListener('click', () => {
            if (direction !== 'DOWN') direction = 'UP';
        });

        document.getElementById('down').addEventListener('click', () => {
            if (direction !== 'UP') direction = 'DOWN';
        });

        document.getElementById('left').addEventListener('click', () => {
            if (direction !== 'RIGHT') direction = 'LEFT';
        });

        document.getElementById('right').addEventListener('click', () => {
            if (direction !== 'LEFT') direction = 'RIGHT';
        });

        startButton.addEventListener('click', () => {
            lobby.style.display = 'none';
            canvas.style.display = 'block';
            controls.style.display = 'grid';
            gameInterval = setInterval(gameLoop, 100);
        });

        // Adicionando o código do oneko
        (function oneko() {
            const nekoEl = document.createElement("div");
            let nekoPosX = 32;
            let nekoPosY = 32;
            let mousePosX = 0;
            let mousePosY = 0;
            let frameCount = 0;
            let idleTime = 0;
            let idleAnimation = null;
            let idleAnimationFrame = 0;
            const nekoSpeed = 10;
            const spriteSets = {
                idle: [[-3, -3]],
                alert: [[-7, -3]],
                scratch: [[-5, 0], [-6, 0], [-7, 0]],
                tired: [[-3, -2]],
                sleeping: [[-2, 0], [-2, -1]],
                N: [[-1, -2], [-1, -3]],
                NE: [[0, -2], [0, -3]],
                E: [[-3, 0], [-3, -1]],
                SE: [[-5, -1], [-5, -2]],
                S: [[-6, -3], [-7, -2]],
                SW: [[-5, -3], [-6, -1]],
                W: [[-4, -2], [-4, -3]],
                NW: [[-1, 0], [-1, -1]],
            };

            function create() {
                nekoEl.id = "oneko";
                nekoEl.style.width = "32px";
                nekoEl.style.height = "32px";
                nekoEl.style.position = "fixed";
                nekoEl.style.zIndex = "999999";
                nekoEl.style.backgroundImage = `url('https://doritus.mmrcoss.tech/assets/js/oneko.gif')`;
                nekoEl.style.imageRendering = "pixelated";
                nekoEl.style.left = "16px";
                nekoEl.style.top = "16px";

                document.body.appendChild(nekoEl);

                document.onmousemove = (event) => {
                    mousePosX = event.clientX;
                    mousePosY = event.clientY;
                };

                window.onekoInterval = setInterval(frame, 100);
            }

            function setSprite(name, frame) {
                const sprite = spriteSets[name][frame % spriteSets[name].length];
                nekoEl.style.backgroundPosition = `${sprite[0] * 32}px ${sprite[1] * 32}px`;
            }

            function frame() {
                frameCount += 1;
                const diffX = nekoPosX - mousePosX;
                const diffY = nekoPosY - mousePosY;
                const distance = Math.sqrt(diffX ** 2 + diffY ** 2);

                if (distance < nekoSpeed || distance < 48) {
                    setSprite("idle", 0);
                    return;
                }

                let direction = diffY / distance > 0.5 ? "N" : "";
                direction += diffY / distance < -0.5 ? "S" : "";
                direction += diffX / distance > 0.5 ? "W" : "";
                direction += diffX / distance < -0.5 ? "E" : "";
                setSprite(direction, frameCount);

                nekoPosX -= (diffX / distance) * nekoSpeed;
                nekoPosY -= (diffY / distance) * nekoSpeed;

                nekoEl.style.left = `${nekoPosX - 16}px`;
                nekoEl.style.top = `${nekoPosY - 16}px`;
            }

            create();
        })();
    </script>
</body>
</html>
